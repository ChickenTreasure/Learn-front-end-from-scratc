// 定义一个数组

var arr = [1, 2, 3, 4, 5]


console.log(...arr) // 1 2 3 4 5
// 这里得到 1 2 3 4 5 的原因是因为我们将数组展开成一个以 , 分割的列表，这个就为作为参数使用了，与下相同

console.log(1, 2, 3, 4, 5) // 1 2 3 4 5

// 浅拷贝
var arr1 = arr

// 深拷贝 
var arr2 = [...arr]

// 进行比较时，浅拷贝与原数组相同
console.log(arr1 === arr);
// 深拷贝就与原数组不同
console.log(arr2 === arr);
/**
 * 这是因为浅拷贝拷贝的是内存地址，而深拷贝拷贝的是具体的值
 */

// 当我们修改原数组后，浅拷贝的值也会跟着一起改变而深拷贝不会
arr[0] = 10 // 将原数组的第一个值修改为10
console.log(arr1) // [ 10, 2, 3, 4, 5 ]
console.log(arr2) // [ 1, 2, 3, 4, 5 ]
